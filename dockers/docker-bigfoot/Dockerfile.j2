{% from "dockers/dockerfile-macros.j2" import install_debian_packages, install_python_wheels, copy_files %}
FROM docker-config-engine-stretch

ARG docker_container_name
RUN [ -f /etc/rsyslog.conf ] && sed -ri "s/%syslogtag%/$docker_container_name#%syslogtag%/;" /etc/rsyslog.conf

# Make apt-get non-interactive
ENV DEBIAN_FRONTEND=noninteractive

# Update apt's cache of available packages
RUN apt-get update

{% if docker_bigfoot_debs.strip() -%}
# Copy built Debian packages
{{ copy_files("debs/", docker_bigfoot_debs.split(' '), "/debs/") }}

# Install built Debian packages and implicitly install their dependencies
{{ install_debian_packages(docker_bigfoot_debs.split(' ')) }}
{%- endif %}

#COPY \
#{% for deb in docker_bigfoot_pydebs.split(' ') -%}
#python-debs/{{ deb }}{{' '}}
#{%- endfor -%}
#debs/

#RUN dpkg -i \
#{% for deb in docker_bigfoot_pydebs.split(' ') -%}
#debs/{{ deb }}{{' '}}
#{%- endfor %}


RUN apt-get install -y apache2
RUN apt-get install -y net-tools
RUN apt-get install -y telnet
RUN apt-get install -y netcat

# Clean up
RUN apt-get clean -y         && \
    apt-get autoclean -y     && \
    apt-get autoremove -y    && \
    rm -rf /debs

COPY ["bigfoot-counter", "bigfoot-counter-db", "/usr/lib/cgi-bin/"]
COPY ["docker_init.sh", "start.sh", "/usr/bin/"]
COPY ["docker-bigfoot.supervisord.conf.j2", "/usr/share/sonic/templates/"]
COPY ["files/supervisor-proc-exit-listener", "/usr/bin"]
COPY ["critical_processes", "/etc/supervisor"]

ENTRYPOINT ["/usr/bin/docker_init.sh"]
